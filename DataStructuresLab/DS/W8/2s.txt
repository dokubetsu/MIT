#include <iostream>

using namespace std;

class Node {
public:
    int data;
    Node* next;

    Node(int value) {
        data = value;
        next = nullptr;
    }
};

class Stack {
    

public:
    Node* top;
    Stack() {
        top = nullptr;
    }

    void push(int value) {
        Node* newNode = new Node(value);
        newNode->next = top;
        top = newNode;
    }

    void pop() {
        if (top != nullptr) {
            Node* temp = top;
            top = top->next;
            delete temp;
        }
    }

    int peek() {
        if (top != nullptr) {
            return top->data;
        }
        else {
            cout << "Stack is empty." << endl;
            return -1; // Return a default value for an empty stack
        }
    }

    bool isEmpty() {
        return top == nullptr;
    }
};

int main() {
    Stack stack;
    int numElements;

    cout << "Enter the number of elements to push onto the stack: ";
    cin >> numElements;

    for (int i = 0; i < numElements; i++) {
        int value;
        cout << "Enter element " << i + 1 << ": ";
        cin >> value;
        stack.push(value);
    }

    cout << "Top element: " << stack.peek() << endl;

    stack.pop();
    cout << "Top element after pop: " << stack.peek() << endl;

    stack.pop();
    stack.pop();
    cout << "Is the stack empty? " << (stack.isEmpty() ? "Yes" : "No") << endl;

    return 0;
}
