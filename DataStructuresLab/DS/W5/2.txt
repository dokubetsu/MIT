#include <iostream>


using namespace std;

class Stack {
private:
  char array[100];
  int top;

public:
  Stack() {
    top = -1;
  }

  void push(char data) {
    if (top == 99) {
      cout << "Stack is full" << endl;
      return;
    }

    top++;
    array[top] = data;
  }

  char pop() {
    if (top == -1) {
      cout << "Stack is empty" << endl;
      return -1;
    }

    char data = array[top];
    top--;
    return data;
  }

  bool isEmpty() {
    return top == -1;
  }

  bool isFull() {
    return top == 99;
  }
};

bool is_balanced(string expression) {
  Stack stack;

  for (int i = 0; i < expression.length(); i++) {
    char parenthesis = expression[i];

    if (parenthesis == '(') {
      stack.push(parenthesis);
    } else if (parenthesis == ')') {
      if (stack.isEmpty()) {
        return false;
      }

      char top_parenthesis = stack.pop();
      if (top_parenthesis != '(') {
        return false;
      }
    }
  }

  return stack.isEmpty();
}

int main() {
  string expression;

  // Prompt the user to enter an expression
  cout << "Enter an expression: ";
  cin >> expression;

  bool balanced = is_balanced(expression);

  if (balanced) {
    cout << "The expression is balanced" << endl;
  } else {
    cout << "The expression is not balanced" << endl;
  }

  return 0;
}
